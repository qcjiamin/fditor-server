
upstream api_servers {
    # 默认轮询策略，可根据需求改为 ip_hash、weight 等
    # 使用 Node.js 容器的服务名或容器名（需确保在同一网络）
    server fditor-server-fditor-server-1:3090;
    # server 127.0.0.1:3091;
    # server 127.0.0.1:3092;
    # 可选优化：健康检查（自动剔除故障服务器）
    # keepalive 32; # 长连接复用，减少握手开销
}
server {
    listen 80;
    server_name  localhost;
    location / {
        # 服务器组，实现负载均衡
        proxy_pass http://api_servers;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#    listen       8000;
#    listen       somename:8080;
#    server_name  somename  alias  another.alias;
#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}
# HTTPS server
#
#server {
#    listen       443 ssl;
#    server_name  localhost;
#    ssl_certificate      cert.pem;
#    ssl_certificate_key  cert.key;
#    ssl_session_cache    shared:SSL:1m;
#    ssl_session_timeout  5m;
#    ssl_ciphers  HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers  on;
#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}


